network:
  # only used by init script to create genesis block 
  genesisProfile: OrdererGenesis

  # defines which organizations will join to which channels
  channels:
    - name: common
      # all peers in these organizations will join the channel
      orgs: [Karga, Nevergreen, Atlantis]
    - name: private-karga-atlantis
      # all peers in these organizations will join the channel
      orgs: [Karga, Atlantis]

  # defines which chaincodes will be installed to which organizations
  chaincodes:
    - name: high-throughput
      language: golang
      # chaincode will be installed to all peers in these organizations
      orgs: [Karga, Nevergreen, Atlantis]
      # at which channels are we instantiating/upgrading chaincode?
      channels:
      - name: common
        # chaincode will be instantiated/upgraded using the first peer in the first organization
        # chaincode will be invoked on all peers in these organizations
        orgs: [Karga, Nevergreen, Atlantis]
        policy: OR('KargaMSP.member','NevergreenMSP.member','AtlantisMSP.member')

chaincode:
  version: "1.0"

flow:
  invoke:
    function: |
      {"Args":["update","test","1","+"]}

metrics:
  core:
    # enable core metrics (peer)
    enabled: true
    # provider can also be set to prometheus
    provider: statsd
    statsd:
      network: tcp
      address: splunk-splunk-kube.splunk.svc:8125
      writeInterval: 10s

  orderer:
    # enable orderer metrics
    enabled: true
    # provider can also be set to prometheus
    provider: statsd
    statsd:
      network: tcp # tcp or udp
      address: splunk-splunk-kube.splunk.svc:8125
      writeInterval: 10s
